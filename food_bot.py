import os
import logging
import aiohttp
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

logging.basicConfig(level=logging.INFO)

MENU = {
    "üç≥ –ó–∞–≤—Ç—Ä–∞–∫": {
        "–Ø–∏—á–Ω–∏—Ü–∞": "1 –ø–æ—Ü–µ–ª—É–π—á–∏–∫",
        "–ö–æ—Ñ–µ": "1 –æ–±–Ω–∏–º–∞—à–∫–∞",
        "–û–º–ª–µ—Ç": "2 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–®–æ–∫–æ–ª–∞–¥–∫–∞": "3 –æ–±–Ω–∏–º–∞—à–∫–∏",
        "–ü–µ—á–µ–Ω—å–µ": "2 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–ô–æ–≥—É—Ä—Ç": "1 –æ–±–Ω–∏–º–∞—à–∫–∞",
        "–¢–≤–æ—Ä–æ–≥": "1 –ø–æ—Ü–µ–ª—É–π—á–∏–∫",
        "–ß–∞–π —Å –º–µ–º–∞–º–∏-–∫–æ—Ç–∏–∫–∞–º–∏": "1 –æ–±–Ω–∏–º–∞—à–∫–∞"
    },
    "ü•£ –û–±–µ–¥": {
        "–ë–æ—Ä—â": "2 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–ì–æ—Ä–æ—Ö–æ–≤—ã–π —Å—É–ø": "1 –ø–æ—Ü–µ–ª—É–π—á–∏–∫",
        "–°—É–ø–µ—Ü –∏–∑ –î—ã–Ω–∏": "3 –æ–±–Ω–∏–º–∞—à–∫–∏",
        "–†–∏—Å": "2 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–û–≤–æ—â–∏": "2 –æ–±–Ω–∏–º–∞—à–∫–∏",
        "–ì—Ä–µ—á–∫–∞": "2 –æ–±–Ω–∏–º–∞—à–∫–∏",
        "–°–ø–∞–≥–µ—Ç—Ç–∏": "3 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–ñ–∞—Ä–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—à–µ—á–∫–∞": "3 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–†—ã–±–∫–∞": "3 –æ–±–Ω–∏–º–∞—à–∫–∏"
    },
    "üåô –£–∂–∏–Ω": {
        "–†–∏—Å": "2 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–û–≤–æ—â–∏": "2 –æ–±–Ω–∏–º–∞—à–∫–∏",
        "–ì—Ä–µ—á–∫–∞": "2 –æ–±–Ω–∏–º–∞—à–∫–∏",
        "–°–ø–∞–≥–µ—Ç—Ç–∏": "3 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–ñ–∞—Ä–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—à–µ—á–∫–∞": "3 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞",
        "–†—ã–±–∫–∞": "3 –æ–±–Ω–∏–º–∞—à–∫–∏"
    },
    "üçï –ü–æ–ª–µ–∑–Ω–∞—è –µ–¥–∞": {
        "–ü–∏—Ü—Ü–∞": "1 –æ–±–Ω–∏–º–∞—à–∫–∞ –∏ 3 –ø–æ—Ü–µ–ª—É—è",
        "–ß–∏–ø—Å–∏–∫–∏": "3 –ø–æ—Ü–µ–ª—É—è",
        "–ü–∏–≤–∞—Å–∏–∫": "1 –ø–æ—Ü–µ–ª—É–π",
        "–í–∏–Ω–æ": "10 –ø–æ—Ü–µ–ª—É–µ–≤ –∏ 2 –æ–±–Ω–∏–º–∞—à–∫–∏",
        "–°—Ö–æ–¥–∏—Ç—å –≤ —Ä–µ—Å—Ç–∏–∫": "50 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–æ–≤"
    }
}

async def get_cat_meme_url(text: str) -> str:
    url = f"https://cataas.com/cat/says/{text}?json=true"
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                if resp.status == 200:
                    data = await resp.json()
                    return "https://cataas.com" + data['url']
                else:
                    logging.error(f"HTTP error {resp.status} fetching meme")
                    return None
    except Exception as e:
        logging.error(f"Error fetching meme: {e}")
        return None

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[KeyboardButton(cat)] for cat in MENU.keys()]
    keyboard.append([KeyboardButton("–°—Ç–æ–ø")])
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–µ–Ω—é:", reply_markup=reply_markup)
    context.user_data.clear()

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user_data = context.user_data

    if text == "–°—Ç–æ–ø":
        await update.message.reply_text("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤—å /start.", reply_markup=ReplyKeyboardRemove())
        user_data.clear()
        return

    if "category" not in user_data:
        if text in MENU:
            user_data["category"] = text
            dishes = MENU[text]
            keyboard = [[KeyboardButton(dish)] for dish in dishes.keys()]
            keyboard.append([KeyboardButton("üîô –ù–∞–∑–∞–¥")])
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text(f"–í—ã–±–µ—Ä–∏ –±–ª—é–¥–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {text}:", reply_markup=reply_markup)
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –º–µ–Ω—é.")
        return

    if "category" in user_data:
        if text == "üîô –ù–∞–∑–∞–¥":
            user_data.pop("category")
            await start(update, context)
            return

        category = user_data["category"]
        if text in MENU[category]:
            price = MENU[category][text]
            meme_url = await get_cat_meme_url(text)
            if meme_url:
                await update.message.reply_photo(meme_url, caption=f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É: {text} ‚Äî {price}")
            else:
                await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É: {text} ‚Äî {price}\n(–º–µ–º –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è)")
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –±–ª—é–¥–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏ 'üîô –ù–∞–∑–∞–¥'.")

if __name__ == "__main__":
    import nest_asyncio
    import asyncio

    nest_asyncio.apply()

    TOKEN = os.getenv("BOT_TOKEN")
    if not TOKEN:
        raise RuntimeError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    asyncio.run(app.run_polling())
